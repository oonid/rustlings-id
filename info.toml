# The format version is an indicator of the compatibility of third-party exercises with the
# Rustlings program.
# The format version is not the same as the version of the Rustlings program.
# In case Rustlings makes an unavoidable breaking change to the expected format of third-party
# exercises, you would need to raise this version and adapt to the new format.
# Otherwise, the newest version of the Rustlings program won't be able to run these exercises.
format_version = 1

# Optional multi-line message to be shown to users when just starting with the exercises.
welcome_message = """Selamat datang di latihan Rustlings dari pihak ketiga ini."""


# Optional multi-line message to be shown to users after finishing all exercises.
final_message = """Kami harap latihan ini bermanfaat untuk Anda :D"""

# Repeat this section for every exercise.
[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "intro1"
dir = "00_intro"
test = false
hint = """Untuk lanjut ke latihan berikutnya, ketik `n` lalu tekan ENTER.\nJika belum berpindah, coba periksa apakah kamu sudah menekan ENTER setelah mengetik `n`."""
skip_check_unsolved = true

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "intro2"
dir = "00_intro"
test = false
hint = """Makro yang digunakan untuk mencetak teks belum dikenali oleh kompiler.\nPeriksa kembali penulisannya â€” apakah sudah sesuai dengan yang didukung Rust?\nPesan error di terminal biasanya menunjukkan saran penulisan yang benar."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables1"
dir = "01_variables"
test = false
hint = """Rust mengharuskan variabel dideklarasikan sebelum digunakan.\nPerhatikan apakah kamu sudah menuliskan kata kunci yang benar sebelum nama variabel."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables2"
dir = "01_variables"
test = false
hint = """Rust tidak mengizinkan penggunaan variabel sebelum diberi nilai.\nCoba beri nilai awal pada `x` saat deklarasi â€” bagaimana jika nilainya 10?\nApakah program dapat berjalan tanpa error setelah itu?"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables3"
dir = "01_variables"
test = false
hint = """Variabel `x` sudah dideklarasikan tetapi belum memiliki nilai.\nRust tidak mengizinkan membaca variabel yang belum diinisialisasi.\nCoba beri nilai awal pada `x` saat deklarasi, misalnya angka bulat seperti 42, lalu jalankan kembali programnya."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables4"
dir = "01_variables"
test = false
hint = """Secara default, variabel di Rust bersifat *immutable* (tidak dapat diubah).\nNamun pada kode ini, variabel `x` dicoba untuk diubah nilainya setelah dideklarasikan.\nCoba cari tahu bagaimana cara menjadikan `x` sebagai variabel *mutable* (dapat diubah) dengan menambahkan satu kata kunci saat deklarasi."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables5"
dir = "01_variables"
test = false
hint = """Pada latihan `variables4`, kamu telah belajar membuat variabel menjadi *mutable* (dapat diubah) agar nilainya bisa diganti.\nNamun di latihan ini, masalahnya bukan pada perubahan nilai, melainkan perubahan tipe.\nRust tidak mengizinkan mengubah tipe variabel setelah dideklarasikan.\nUntuk kasus seperti ini, Rust menyediakan fitur bernama *shadowing* (penimpaan variabel).\nCoba cari tahu bagaimana cara mendeklarasikan ulang variabel dengan nama yang sama.\nPelajari lebih lanjut tentang *shadowing* di dokumentasi resmi:\nhttps://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html#shadowing"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "variables6"
dir = "01_variables"
test = false
hint = """Rust memiliki jenis nilai khusus bernama *konstanta* yang dideklarasikan dengan kata kunci `const`.\nBerbeda dengan variabel (`let`), konstanta selalu bersifat *immutable* (tidak dapat diubah) dan wajib memiliki anotasi tipe secara eksplisit.\nPastikan kamu sudah menyertakan tipe data saat mendeklarasikan konstanta.\nPenjelasan lengkap tentang perbedaan variabel dan konstanta dapat dibaca di sini:\nhttps://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html#constants"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions1"
dir = "02_functions"
test = false
hint = """Fungsi `call_me` dipanggil di dalam `main`, tetapi belum didefinisikan di mana pun.\nDari cara pemanggilannya, tampak bahwa fungsi ini tidak memerlukan argumen dan tidak mengembalikan nilai.\nStrukturnya akan mirip seperti `main` â€” coba pikirkan bagaimana fungsi seperti itu dituliskan di Rust."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions2"
dir = "02_functions"
test = false
hint = """Di Rust, tipe data untuk setiap parameter fungsi harus dituliskan secara eksplisit.\nPerhatikan bahwa pada fungsi `call_me`, parameter `num` belum memiliki tipe di dalam bagian signature-nya."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions3"
dir = "02_functions"
test = false
hint = """Tidak ada masalah pada deklarasi fungsi, tetapi perhatikan kembali cara fungsi `call_me` dipanggil.\nApakah sudah sesuai dengan jumlah argumen yang dibutuhkan?"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions4"
dir = "02_functions"
test = false
hint = """Pesan error menunjukkan bahwa fungsi `sale_price` belum memiliki anotasi tipe setelah tanda `->`.\nCoba bandingkan dengan fungsi `is_even`, yang sudah memiliki tipe nilai kembalian secara eksplisit."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions5"
dir = "02_functions"
test = false
hint = """Ini adalah kesalahan umum di Rust dan bisa diperbaiki hanya dengan menghapus satu karakter.\nRust membedakan antara *ekspresi* (yang mengembalikan nilai) dan *pernyataan* (yang tidak).\nFungsi `square` seharusnya mengembalikan nilai `i32`, tapi saat ini justru mengembalikan `()`.\nAda dua cara untuk memperbaikinya:\n1. Tambahkan kata kunci `return`\n2. Atau, hapus titik koma di akhir baris `num * num`"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "functions6_closure"
dir = "02_functions"
test = false
hint = """Closure di Rust didefinisikan dengan sintaks `|param| expression`,\nmisalnya `|x: i32| x + 2` adalah fungsi anonim yang mengambil i32 lalu menambahkan 2.\nDari contoh tersebut sesuaikan untuk fungsi square."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "if1"
dir = "03_if"
hint = """Rust memungkinkan kamu menulis logika percabangan dalam satu baris menggunakan ekspresi `if`.\nMirip dengan pola di bahasa lain seperti: C++ `a > b ? a : b` atau Python `a if a > b else b`.\nIngat:\n- Kondisi `if` tidak perlu tanda kurung.\n- Blok `if` dan `else` harus pakai `{}`.\n- Karena `if` adalah ekspresi, kamu bisa langsung menggunakannya untuk menghasilkan nilai."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "if2"
dir = "03_if"
hint = """Rust mengharuskan semua jalur percabangan `if`, `else if`, dan `else` mengembalikan tipe data yang sama.\nPerhatikan bahwa `picky_eater` harus selalu mengembalikan `&str`, tapi salah satu jalur masih mengembalikan tipe lain.\nBaca bagian pengujian (tests) untuk memahami nilai apa yang diharapkan untuk setiap jenis makanan."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "if3"
dir = "03_if"
hint = """Rust mengharuskan semua cabang `if` (`if`, `else if`, dan `else`) menghasilkan nilai dengan tipe data yang sama.\nPeriksa kembali apakah semua bagian dalam ekspresi `if` yang mengatur nilai `identifier` sudah konsisten tipenya."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "quiz1"
dir = "quizzes"
hint = """Tidak ada hint untuk kuis ini ;)"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types1"
dir = "04_primitive_types"
test = false
hint = """Gunakan operator `!` untuk membalik nilai boolean.\nContoh: `!true == false`, dan `!is_morning` bisa digunakan untuk membuat `is_evening`."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types2"
dir = "04_primitive_types"
test = false
hint = """Gunakan tanda petik tunggal `'` untuk mendeklarasikan satu karakter.\nContoh: `'a'`, `'9'`, `'@'`, `'ðŸ¦€'`.\nPastikan kamu mengisi variabel `your_character` dengan satu karakter valid."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types3"
dir = "04_primitive_types"
test = false
hint = """Rust memiliki notasi singkat untuk membuat array besar, misalnya `[angka; jumlah]` akan mengulang nilai sebanyak jumlah tersebut.\nContoh: `[7; 100]` akan membuat array berisi seratus angka 7.\nCoba buat `a.len() >= 100` bernilai true dengan cara ini."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types4"
dir = "04_primitive_types"
hint = """Topik slice dijelaskan lebih lanjut di Rust Book: https://doc.rust-lang.org/book/ch04-03-slices.html\nUntuk mengambil sebagian elemen dari array, gunakan notasi `&array[start..end]`, di mana `start` disertakan dan `end` tidak disertakan.\nKenapa `assert_eq!` membandingkan dengan `[2, 3, 4]` (tanpa `&`)? Karena `&a[start..end]` adalah referensi (slice), dan `assert_eq!` melakukan *coercion* secara otomatis.\nPenjelasan: https://doc.rust-lang.org/nomicon/coercions.html"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types5"
dir = "04_primitive_types"
test = false
hint = """Topik tuple dibahas di Rust Book: https://doc.rust-lang.org/book/ch03-02-data-types.html#the-tuple-type\nGunakan pola seperti `(name, age) = tuple` untuk mengurai isi tuple menjadi variabel-variabel yang bisa digunakan."""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "primitive_types6"
dir = "04_primitive_types"
hint = """Kamu bisa mengakses elemen tuple menggunakan indeks, misalnya `tuple.1` untuk elemen kedua.\nBaca lebih lanjut tentang tuple di Rust Book: https://doc.rust-lang.org/book/ch03-02-data-types.html#the-tuple-type"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "vecs1"
dir = "05_vecs"
hint = """Di Rust, kamu bisa membuat vektor dengan dua cara:\n1. Menggunakan `Vec::new()` lalu `.push()` tiap elemen\n2. Atau cara lebih ringkas, dengan makro `vec![]` jika kamu sudah tahu nilai awalnya.\nUntuk kasus ini, gunakan `vec![10, 20, 30, 40]`.\nLihat dokumentasi: https://doc.rust-lang.org/book/ch08-01-vectors.html"""

[[exercises]]
# Exercise name which is the exercise file name without the `.rs` extension.
name = "vecs2"
dir = "05_vecs"
hint = "Fungsi pertama menggunakan loop dan .push() untuk membuat vektor.\nFungsi kedua menggunakan .iter().map(...).collect() untuk membentuk vektor dari hasil transformasi.\nCoba eksplorasi mana yang menurutmu lebih idiomatik dalam Rust.\nLihat dokumentasi: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map"



